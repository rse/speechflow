##
##  speechflow.yaml -- Speechflow Sample Audio Processing Graphs
##

#   Capture and meter audio from microphone device into WAV audio file
capturing: |
    xio-device(device: env.SPEECHFLOW_DEVICE_MIC, mode: "r") |
        a2a-vad() |
            a2a-meter(1000) |
                a2a-wav(mode: "encode") |
                    xio-file(path: "capture.wav", mode: "w", type: "audio")

#   Pass-through audio from microphone device to speaker
#   device and in parallel record it to WAV audio file
pass-through: |
    xio-device(device: env.SPEECHFLOW_DEVICE_MIC, mode: "r") | {
        a2a-wav(mode: "encode") |
            xio-file(path: "capture.wav", mode: "w", type: "audio"),
        xio-device(device: env.SPEECHFLOW_DEVICE_SPK, mode: "w")
    }

#   Generate text file with German transcription of German MP3 audio file
transcription: |
    xio-file(path: argv.0, mode: "r", type: "audio") |
        a2a-ffmpeg(src: "mp3", dst: "pcm") |
            a2t-deepgram(language: "de") |
                t2t-format(width: 80) |
                    xio-file(path: argv.1, mode: "w", type: "text")

#   Generate WebVTT file with German closed captions of German MP3 audio file
captioning: |
    xio-file(path: argv.0, mode: "r", type: "audio") |
        a2a-ffmpeg(src: "mp3", dst: "pcm") |
            a2t-deepgram(language: "de") |
                t2t-subtitle(format: "vtt") |
                    xio-file(path: argv.1, mode: "w", type: "text")

#   Generate WebVTT file with English subtitles of German MP3 audio file
subtitling: |
    xio-file(path: argv.0, mode: "r", type: "audio") |
        a2a-ffmpeg(src: "mp3", dst: "pcm") |
            a2t-deepgram(language: "de") |
                t2t-deepl(src: "de", dst: "en") |
                    t2t-subtitle(format: "vtt") |
                        xio-file(path: argv.1, mode: "w", type: "text")

#   Ad-Hoc text translation from German to English
translation: |
    xio-file(path: "-", mode: "r", type: "text") |
        t2t-deepl(src: "de", dst: "en") |
            xio-file(path: "-", mode: "w", type: "text")

#   Generate audio file with English voice for a text file
speaking: |
    xio-file(path: argv.0, mode: "r", type: "text") |
        t2a-kokoro(language: "en") |
            a2a-wav(mode: "encode") |
                xio-file(path: argv.1, mode: "w", type: "audio")

#   Batch studio transcription from German to English,
#   including the capturing of all involved inputs and outputs:
studio-transcription: |
    xio-file(path: argv.0, mode: "r", type: "audio") | {
        a2a-ffmpeg(src: "mp3", dst: "pcm") | {
            a2t-deepgram(language: "de") | {
                t2t-format(width: 80) |
                    xio-file(path: argv.1, mode: "w", type: "text"),
                t2t-subtitle(format: "vtt") |
                    xio-file(path: argv.2, mode: "w", type: "text"),
                t2t-subtitle(format: "srt") |
                    xio-file(path: argv.3, mode: "w", type: "text"),
                t2a-elevenlabs(voice: "Mark", optimize: "quality", speed: 1.05, language: "en") |
                    a2a-wav(mode: "encode") |
                        xio-file(path: argv.4, mode: "w", type: "audio")
            }
        }
    }

#   Real-time studio translation from German to English,
#   including the capturing of all involved inputs and outputs:
studio-translation: |
    xio-device(device: env.SPEECHFLOW_DEVICE_MIC, mode: "r") | {
        a2a-gender() | {
            a2a-meter(interval: 250, dashboard: "meter1") |
                a2a-wav(mode: "encode") |
                    xio-file(path: "program-de.wav", mode: "w", type: "audio"),
            a2t-deepgram(language: "de", interim: true) | {
                x2x-trace(name: "trace1", type: "text", dashboard: "text1") |
                    t2t-subtitle(format: "vtt", words: true) |
                        xio-file(path: "program-de.vtt", mode: "w", type: "text"),
                t2t-sentence() | {
                    x2x-trace(name: "trace2", type: "text", notify: true, dashboard: "text2") |
                        t2t-format(width: 80) |
                            xio-file(path: "program-de.txt", mode: "w", type: "text"),
                    t2t-deepl(src: "de", dst: "en") | {
                        x2x-trace(name: "trace3", type: "text", dashboard: "text3") | {
                            t2t-format(width: 80) |
                                xio-file(path: "program-en.txt", mode: "w", type: "text"),
                            t2t-subtitle(format: "vtt", words: false) |
                                xio-file(path: "program-en.vtt", mode: "w", type: "text"),
                            {
                                x2x-filter(name: "S2T-male", type: "text", var: "meta:gender", op: "==", val: "male") |
                                    t2a-elevenlabs(voice: "Mark", optimize: "latency", speed: 1.05, language: "en"),
                                x2x-filter(name: "S2T-female", type: "text", var: "meta:gender", op: "==", val: "female") |
                                    t2a-elevenlabs(voice: "Brittney", optimize: "latency", speed: 1.05, language: "en")
                            } | {
                                a2a-meter(interval: 250, dashboard: "meter2"),
                                a2a-wav(mode: "encode") |
                                    xio-file(path: "program-en.wav", mode: "w", type: "audio"),
                                xio-device(device: env.SPEECHFLOW_DEVICE_SPK, mode: "w")
                            }
                        }
                    }
                }
            }
        }
    }

#   Test-drive for development
test: |
    xio-device(device: env.SPEECHFLOW_DEVICE_MIC, mode: "r", chunk: 200) | {
        a2a-meter(interval: 100, dashboard: "meter1", mode: "sink"),
        a2a-gender() | {
            a2t-deepgram(language: "de", model: "nova-2", interim: true) | {
                x2x-trace(type: "text", mode: "sink", dashboard: "text1"),
                t2t-subtitle(mode: "render", addr: "127.0.0.1", port: 8585),
                x2x-filter(name: "final", type: "text", var: "kind", op: "==", val: "final") | {
                    t2t-sentence() | {
                        x2x-trace(type: "text", dashboard: "text2", mode: "sink"),
                        t2t-deepl(src: "de", dst: "en") | {
                            x2x-trace(type: "text", dashboard: "text3", mode: "sink"),
                            t2a-elevenlabs(voice: "Mark", optimize: "latency", speed: 1.05, language: "en") | {
                                a2a-meter(interval: 100, dashboard: "meter2", mode: "sink"),
                                xio-device(device: env.SPEECHFLOW_DEVICE_SPK, mode: "w")
                            }
                        }
                    }
                }
            }
        }
    }

