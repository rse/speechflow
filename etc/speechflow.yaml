##
##  sample.yaml -- Speechflow Sample Audio Processing Graphs
##

#   Capture audio from microphone device into WAV audio file
capturing: |
    device(device: "coreaudio:Elgato Wave:3", mode: "r") |
        vad() |
            meter(1000) |
                wav(mode: "encode") |
                    file(path: "capture.wav", mode: "w", type: "audio")

#   Pass-through audio from microphone device to speaker
#   device and in parallel record it to WAV audio file
pass-through: |
    device(device: "wasapi:VoiceMeeter Out B1", mode: "r") | {
        wav(mode: "encode") |
            file(path: "capture.wav", mode: "w", type: "audio"),
        device(device: "wasapi:VoiceMeeter VAIO3 Input", mode: "w")
    }

#   Generate text file with German transcription of MP3 audio file
transcription: |
    file(path: argv.0, mode: "r", type: "audio") |
        ffmpeg(src: "mp3", dst: "pcm") |
            deepgram(language: "de", key: env.SPEECHFLOW_DEEPGRAM_KEY) |
                format(width: 80) |
                    file(path: argv.1, mode: "w", type: "text")

#  Generate text file with German subtitles of MP3 audio file
subtitling: |
    file(path: argv.0, mode: "r", type: "audio") |
        ffmpeg(src: "mp3", dst: "pcm") |
            deepgram(language: "de", key: env.SPEECHFLOW_DEEPGRAM_KEY) |
                subtitle(format: "vtt") |
                    file(path: argv.1, mode: "w", type: "text")

#  Ad-Hoc text translation from German to English
translation: |
    file(path: "-", mode: "r", type: "text") |
        deepl(src: "de", dst: "en") |
            file(path: "-", mode: "w", type: "text")

#   Generate audio file with English voice for a text file
speaking: |
    file(path: argv.0, mode: "r", type: "text") |
        kokoro(language: "en") |
            wav(mode: "encode") |
                file(path: argv.1, mode: "w", type: "audio")

#   Batch studio transcription from German to English,
#   including the capturing of all involved inputs and outputs:
studio-transcription: |
    file(path: argv.0, mode: "r", type: "audio") | {
        ffmpeg(src: "mp3", dst: "pcm") | {
            deepgram(language: "de", key: env.SPEECHFLOW_DEEPGRAM_KEY) | {
                format(width: 80) |
                    file(path: argv.1, mode: "w", type: "text"),
                subtitle(format: "vtt") |
                    file(path: argv.2, mode: "w", type: "text"),
                subtitle(format: "srt") |
                    file(path: argv.3, mode: "w", type: "text")
                elevenlabs(voice: "Mark", optimize: "quality", speed: 1.05, language: "en")
            }
        }
    }

#   Real-time studio translation from German to English,
#   including the capturing of all involved inputs and outputs:
studio-translation: |
    device(device: "coreaudio:Elgato Wave:3", mode: "r") | {
        gender() | {
            meter(interval: 250) |
                wav(mode: "encode") |
                    file(path: "program-de.wav", mode: "w", type: "audio"),
            deepgram(language: "de", key: env.SPEECHFLOW_DEEPGRAM_KEY) | {
                format(width: 80) |
                    file(path: "program-de.txt", mode: "w", type: "text"),
                deepl(src: "de", dst: "en", key: env.SPEECHFLOW_DEEPL_KEY) | {
                    trace(name: "text", type: "text") | {
                        format(width: 80) |
                            file(path: "program-en.txt", mode: "w", type: "text"),
                        subtitle(format: "srt") |
                            file(path: "program-en.srt", mode: "w", type: "text"),
                        mqtt(url: "mqtt://10.1.0.10:1883",
                            username: env.SPEECHFLOW_MQTT_USER,
                            password: env.SPEECHFLOW_MQTT_PASS,
                            topicWrite: "stream/studio/sender"),
                        {
                            filter(name: "S2T-male", type: "text", var: "meta:gender", op: "==", val: "male") |
                                elevenlabs(voice: "Mark", optimize: "latency", speed: 1.05, language: "en"),
                            filter(name: "S2T-female", type: "text", var: "meta:gender", op: "==", val: "female") |
                                elevenlabs(voice: "Brittney", optimize: "latency", speed: 1.05, language: "en")
                        } | {
                            wav(mode: "encode") |
                                file(path: "program-en.wav", mode: "w", type: "audio"),
                            device(device: "coreaudio:USBAudio2.0", mode: "w")
                        }
                    }
                }
            }
        }
    }

